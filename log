1. 优先队列需要考虑：LST相同时，应该按照pi最长优先入队；
	测试样例[ri,pi,di]：
	[6,1,9] [4,1,6], [2,1,4], [2,4,7],[3,3,7]
	
2. 	if逻辑判断条件最好不要同时判断多个，即A&B；
    	因为本来是if(A1){ 
    			      if (B1)
    		   }else if( A2){
    		   		  if(B2)
    		   }
        如果写if(A1&B1){} else if(A2&B2){} 在A1&B1不成立的情况下，会判断A2&B2
    	
	Task[] task = new Task[10];
	task[0] = new Task(19,1,20);
	task[1] = new Task(15,2,20);
	task[2] = new Task(15,2,17);
	task[3] = new Task(5,3,9);
	task[4] = new Task(13,2,18);
	task[5] = new Task(13,1,15);
	task[6] = new Task(12,2,14);
	task[7] = new Task(19,1,20);
	task[8] = new Task(1,8,17);
	task[9] = new Task(10,1,11);
	
3. N = 1000 M = 10 P_max = 10 T=50-500
   存在连个区间的最大任务相同，从而导致重复计算多次；
   问题：用一个二维数据记录每个区间最长任务的最佳开始时间，误差不会超过3
	
	